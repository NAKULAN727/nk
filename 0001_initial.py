# Generated by Django 3.1.12 on 2025-05-14 06:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(blank=True, max_length=150, verbose_name='username')),
                ('phone_number', models.CharField(blank=True, max_length=15, verbose_name='phone number')),
                ('address', models.TextField(blank=True, verbose_name='address')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='profile picture')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Farm Name')),
                ('location', models.CharField(max_length=100, verbose_name='Location')),
                ('size', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Size (acres)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Field Name')),
                ('size', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Size (acres)')),
                ('soil_type', models.CharField(max_length=50, verbose_name='Soil Type')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='main.farm')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_type', models.CharField(choices=[('soil_moisture', 'Soil Moisture'), ('temperature', 'Temperature'), ('humidity', 'Humidity'), ('rainfall', 'Rainfall'), ('light', 'Light')], max_length=50, verbose_name='Sensor Type')),
                ('name', models.CharField(max_length=100, verbose_name='Sensor Name')),
                ('installation_date', models.DateField(verbose_name='Installation Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='main.field')),
            ],
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(verbose_name='Temperature (Â°C)')),
                ('humidity', models.FloatField(verbose_name='Humidity (%)')),
                ('rainfall', models.FloatField(verbose_name='Rainfall (mm)')),
                ('wind_speed', models.FloatField(verbose_name='Wind Speed (km/h)')),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_data', to='main.farm')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10, verbose_name='Priority')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='main.farm')),
            ],
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(verbose_name='Value')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='main.sensor')),
            ],
        ),
        migrations.CreateModel(
            name='IrrigationSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='Start Time')),
                ('duration', models.IntegerField(verbose_name='Duration (minutes)')),
                ('water_amount', models.FloatField(verbose_name='Water Amount (liters)')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_schedules', to=settings.AUTH_USER_MODEL)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='irrigation_schedules', to='main.field')),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_type', models.CharField(choices=[('rice', 'Rice'), ('wheat', 'Wheat'), ('corn', 'Corn'), ('tomato', 'Tomato'), ('potato', 'Potato'), ('other', 'Other')], max_length=50, verbose_name='Crop Type')),
                ('planting_date', models.DateField(verbose_name='Planting Date')),
                ('expected_harvest_date', models.DateField(verbose_name='Expected Harvest Date')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crops', to='main.field')),
            ],
        ),
    ]
